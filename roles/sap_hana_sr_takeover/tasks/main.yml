---
# tasks file for sap_hana_sr_takeover
#

- name: get hdb online state
  shell: |
    set -o pipefail
    source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
    -sr_state | awk '($1 == "online:") {print $2}'
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  changed_when: false
  register: register_sap_hana_sr_takeover_online

# returns: none, primary or replication method (on secondary)
- name: get mode of system
  shell: |
    set -o pipefail
    source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
    -sr_state | awk '($1 == "mode:") {print $2}'
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  changed_when: false
  register: register_sap_hana_sr_takeover_mode

##
# enable the right primary
#
- name: Fail, when planned primary cannot take over (no hsr configured)
  fail:
    msg: "This system is not part of HANA SR."
  when:
    - ansible_hostname == sap_hana_sr_takeover_primary
    - register_sap_hana_sr_takeover_mode.stdout == "none"

- name: make 'sap_hana_sr_takeover_primary' the new primary
  shell: |
    source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
    -sr_takeover
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  when:
    - ansible_hostname == sap_hana_sr_takeover_primary
    - register_sap_hana_sr_takeover_mode.stdout != "primary"


###
# register the secondary
#
- name: register 'sap_hana_sr_takeover_secondary' to the new primary
  block:
    - name: Ensure HDB on 'sap_hana_sr_takeover_secondary' is stopped
      shell: |
        source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
        /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/HDB stop
      args:
        executable: /bin/bash
      when:
        - register_sap_hana_sr_takeover_online.stdout == 'true'

    - name: Register 'sap_hana_sr_takeover_secondary' to the primary
      shell: |
        source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
        /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
        -sr_register \
        --name="{{ sap_hana_sr_takeover_sitename }}" \
        --remoteHost={{ sap_hana_sr_takeover_primary }} \
        --remoteInstance={{ sap_hana_instance_number }} \
        --replicationMode={{ sap_hana_sr_takeover_rep_mode }} \
        --operationMode={{ sap_hana_sr_takeover_hsr_oper_mode }}
      args:
        executable: /bin/bash

  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  when:
    - ansible_hostname == sap_hana_sr_takeover_secondary
    - register_sap_hana_sr_takeover_mode.stdout != sap_hana_sr_takeover_rep_mode

## Check Online state and start HDB
- name: get hdb online state
  shell: |
    set -o pipefail
    source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/exe/hdbnsutil \
    -sr_state | awk '($1 == "online:") {print $2}'
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  changed_when: false
  register: register_sap_hana_sr_takeover_online

- name: Ensure HDB is running
  shell: |
    source /usr/sap/{{ sap_hana_sid | upper }}/home/.sapenv.sh && \
    /usr/sap/{{ sap_hana_sid | upper }}/HDB{{ sap_hana_instance_number }}/HDB start
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_hana_sid | lower }}adm"
  when:
    - register_sap_hana_sr_takeover_online.stdout == 'false'
