---
# Update fapolicy rules
- name: Update fapolicy rules
  block:
    - name: check fapolicy service
      ansible.builtin.stat:
        path: /run/fapolicyd/fapolicyd.fifo
      register: fa_fifo

    - name: check fapolicy rules file
      ansible.builtin.stat:
        path: /etc/fapolicyd/fapolicyd.rules
      register: fa_rules

    # Add header line
    - name: Add header line
      ansible.builtin.lineinfile:
        path: /etc/fapolicyd/fapolicyd.rules
        line: "{{ rules_header }}"
        insertafter: "# or anything else applications access that is not a computer langauge."  #  Hardcoded.
      when: fa_rules.stat.exists

    # Allow permission-any for SAP directories

    - name: Add lines of fapolicy rules for User {{ sap_fapolicy_user }} - UID {{ sap_fapolicy_user }}
      ansible.builtin.lineinfile:
        path: /etc/fapolicyd/fapolicyd.rules
        line: "allow perm=any uid={{ sap_fapolicy_user }} : dir='{{ item }}'"
        insertafter: "{{ rules_header }}"
      when: fa_rules.stat.exists
      register: fapolicy_res
      loop: "{{ sap_fapolicy_directory_list }}"

    # Allow trust
    - name: Add trust=1 for User {{ sap_fapolicy_user }} - UID {{ sap_fapolicy_user }}
      ansible.builtin.lineinfile:
        path: /etc/fapolicyd/fapolicyd.rules
        line: "allow perm=any uid={{ sap_fapolicy_user }} trust=1 : all"
        insertafter: "{{ rules_header }}"
      when: fa_rules.stat.exists
      register: fapolicy_res

    - name: update fapolicy db
      ansible.builtin.shell: /usr/sbin/fapolicyd-cli --update
      when: fa_fifo.stat.exists

# - debug:
#     msg:
#       - "User: {{ item.0 }}   UID: {{ item.1 }}"
#   loop: "{{ user_list|zip(sap_fapolicy_uid_list)|list }}"
